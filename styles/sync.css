.grid {
    display: flex;
    flex-direction: column;
    place-items: center;
}

.buttons {
    grid-column: span 10;
    grid-row: 1;
    display: flex;
    justify-self: center;
    margin: 0 auto;;
    justify-content: space-between;
    align-items: center;
    position: relative;
}

.syncbutton {
  display: flex;
  background-color: #00DA5A;
  color: #ffffff;
  padding: 0.5rem 1.4rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 700;
  text-align: center;
  vertical-align: middle;
  align-items: center;
  border-radius: 0.5rem;
  gap: 0.75rem;
  border: none;
  cursor: pointer;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transition: .6s ease;
}

.syncbutton svg {
  height: 30px;
}

.syncbutton:hover {
  box-shadow: none;
}


.list_sync_area {
    grid-column: span 5;
    grid-row: 2 / 5;
    display: flex;

    margin: 0 auto;
    background-color: rgba(0, 255, 255, 0);
    justify-content: space-between;
    align-items: center;
}

.playlist {
    display: flex;
    flex-direction: row;
    width: auto;
    height: --webkit-fill-available;
    margin: 0px;
    background-color: rgb(90, 90, 90);
    justify-content: left;
    align-items: center;
}

.playlist:hover {
    background-color: rgb(70, 70, 70);
}

.playlist:active {
    background-color: rgb(50, 50, 50);
}

.playlistimage {
    width: 3rem;
    height: 3rem;
    border-radius: 0.5rem;
    font-size: 1rem;
    line-height: 2rem;
    padding-left: 2rem;
    padding-right: 2rem;
    padding-top: 0.7rem;
    padding-bottom: 0.7rem;
    object-fit: cover;
}

.placeholder {
    border-radius: 0.5rem;
    width: 15rem;
    font-size: 1rem;
    line-height: 2rem;
    padding-left: 2rem;
    padding-right: 2rem;
    padding-top: 0.7rem;
    padding-bottom: 0.7rem;
}

.selected {
  background-color: #3ea562;
}

.lists_container{
    height: 30rem; 
    overflow-y: scroll;
    flex-direction: column;
    width: 22rem;
    height: --webkit-fill-available;
    margin: 10px;
    background-color: rgb(90, 90, 90);
    justify-content: center;
    align-items: center;
}

#rekordbox_playlists {
    grid-column:   4;
    grid-row: 2;
}

#spotify_playlists {
    grid-column: 2;
    grid-row: 2;
}

.buttons .btn {

    grid-column: 1 / 3;
    text-emphasis: none;
    border-width: 2px;
    border-color: black;
    grid-row: 2;
    display: flex;
    width: 200px;
    height: 50px;
    margin: 50 auto 50 auto;
    background-color: aqua;
    justify-content: center;
    align-items: center;
    transition: background-color 0.3s ease;
}

.grid .btn:hover {
    background-color: rgb(116, 218, 209);
}

.grid .btn:active {
    background-color: rgb(0, 128, 128);
}

.grid .btn:hover {
    background-color: rgb(116, 218, 209);
}

/* Hide the default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  .container {
    display: flex;
    flex-direction: column;
    place-items: center;
    position: relative;
    cursor: pointer;
    font-size: 1.5rem;
    user-select: none;
    border-width: 10px;
    border-color: black;
  }
  
  /* Create a custom checkbox */
  .checkmark {
    --clr: #0B6E4F;
    position: relative;
    top: 0;
    left: 0;
    height: 1.3em;
    width: 1.3em;
    background-color: #ccc;
    border-radius: 50%;
    transition: 300ms;
  }
  
  /* When the checkbox is checked, add a blue background */
  .container input:checked ~ .checkmark {
    background-color: var(--clr);
    border-radius: .5rem;
    animation: pulse 500ms ease-in-out;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .container input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .container .checkmark:after {
    left: 0.45em;
    top: 0.25em;
    width: 0.25em;
    height: 0.5em;
    border: solid #E0E0E2;
    border-width: 0 0.15em 0.15em 0;
    transform: rotate(45deg);
  }
  
  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 #0B6E4F90;
      rotate: 20deg;
    }
  
    50% {
      rotate: -20deg;
    }
  
    75% {
      box-shadow: 0 0 0 10px #0B6E4F60;
    }
  
    100% {
      box-shadow: 0 0 0 13px #0B6E4F30;
      rotate: 0;
    }
  }

  .SyncManager {
    display: flex;
    flex-direction: column;
    place-items: center;
  }

  .syncbutton {
    color: white;
    background-color: #222;
    font-weight: 500;
    border-radius: 0.5rem;
    font-size: 1rem;
    line-height: 2rem;
    padding-left: 2rem;
    padding-right: 2rem;
    padding-top: 0.7rem;
    padding-bottom: 0.7rem;
    cursor: pointer;
    text-align: center;
    margin-right: 0.5rem;
    margin-left: 0.5rem;
    display: inline-flex;
    align-items: center;
    border: none;
  }
  
  .syncbutton:hover {
    background-color: #333;
  }
  
  .syncbutton svg {
    display: inline;
    width: 1.3rem;
    height: 1.3rem;
    margin-right: 0.75rem;
    color: white;
  }
  
  .syncbutton:focus svg {
    animation: spin_357 0.5s linear;
  }
  
  @keyframes spin_357 {
    from {
      transform: rotate(0deg);
    }
  
    to {
      transform: rotate(360deg);
    }
  }
  